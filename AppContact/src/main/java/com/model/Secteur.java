package com.model;

// Generated 9 oct. 2016 13:55:49 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Secteur generated by hbm2java
 */
@Entity
@Table(name = "secteur", catalog = "appcontact")
public class Secteur implements java.io.Serializable {

	private Integer idSecteur;
	private String libelleSecteur;
	private Set<Morale> morales = new HashSet<Morale>(0);
	private Set<Physique> physiques = new HashSet<Physique>(0);

	public Secteur() {
	}

	public Secteur(String libelleSecteur, Set<Morale> morales,
			Set<Physique> physiques) {
		this.libelleSecteur = libelleSecteur;
		this.morales = morales;
		this.physiques = physiques;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idSecteur", unique = true, nullable = false)
	public Integer getIdSecteur() {
		return this.idSecteur;
	}

	public void setIdSecteur(Integer idSecteur) {
		this.idSecteur = idSecteur;
	}

	@Column(name = "libelleSecteur", length = 254)
	public String getLibelleSecteur() {
		return this.libelleSecteur;
	}

	public void setLibelleSecteur(String libelleSecteur) {
		this.libelleSecteur = libelleSecteur;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "secteur")
	public Set<Morale> getMorales() {
		return this.morales;
	}

	public void setMorales(Set<Morale> morales) {
		this.morales = morales;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "secteur")
	public Set<Physique> getPhysiques() {
		return this.physiques;
	}

	public void setPhysiques(Set<Physique> physiques) {
		this.physiques = physiques;
	}
	
	
	  @Override
	    public boolean equals(Object other) {
	        return (other instanceof Secteur) && (idSecteur != null)
	            ? idSecteur.equals(((Secteur) other).idSecteur)
	            : (other == this);
	    }

	    @Override
	    public int hashCode() {
	        return (idSecteur != null)
	            ? (this.getClass().hashCode() + idSecteur.hashCode())
	            : super.hashCode();
	    }

	    @Override
	    public String toString() {
	        return String.format("Secteur[%d, %s]", idSecteur,libelleSecteur);
	    }

}
