package com.model;

// Generated 31 août 2016 17:16:44 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Morale generated by hbm2java
 */
@Entity
@Table(name = "morale", catalog = "appcontactmybuild")
public class Morale implements java.io.Serializable {

	private Integer idContact;
	private Produit produit;
	private Contact contact;
	private Chefresponsable chefresponsable;
	private Typemoral typemoral;
	private String description;
	private Integer fax;
	private Set<Membre> membres = new HashSet<Membre>(0);

	public Morale() {
	}

	public Morale(Contact contact) {
		this.contact = contact;
	}

	public Morale(Produit produit, Contact contact,
			Chefresponsable chefresponsable, Typemoral typemoral,
			String description, Integer fax, Set<Membre> membres) {
		this.produit = produit;
		this.contact = contact;
		this.chefresponsable = chefresponsable;
		this.typemoral = typemoral;
		this.description = description;
		this.fax = fax;
		this.membres = membres;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "contact"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "idContact", unique = true, nullable = false)
	public Integer getIdContact() {
		return this.idContact;
	}

	public void setIdContact(Integer idContact) {
		this.idContact = idContact;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idProduit",nullable = true)
	public Produit getProduit() {
		return this.produit;
	}

	public void setProduit(Produit produit) {
		this.produit = produit;
	}

	@OneToOne(fetch = FetchType.EAGER)
	@PrimaryKeyJoinColumn
	public Contact getContact() {
		return this.contact;
	}

	public void setContact(Contact contact) {
		this.contact = contact;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idChefResponsable",nullable = true)
	public Chefresponsable getChefresponsable() {
		return this.chefresponsable;
	}

	public void setChefresponsable(Chefresponsable chefresponsable) {
		this.chefresponsable = chefresponsable;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idMoral",nullable = false)
	public Typemoral getTypemoral() {
		return this.typemoral;
	}

	public void setTypemoral(Typemoral typemoral) {
		this.typemoral = typemoral;
	}

	@Column(name = "description", length = 254)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "fax")
	public Integer getFax() {
		return this.fax;
	}

	public void setFax(Integer fax) {
		this.fax = fax;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "morale")
	public Set<Membre> getMembres() {
		return this.membres;
	}

	public void setMembres(Set<Membre> membres) {
		this.membres = membres;
	}
	
	
	
	
    @Override
    public boolean equals(Object other) {
        return (other instanceof Morale) && (idContact != null)
            ? idContact.equals(((Morale) other).idContact)
            : (other == this);
    }

    @Override
    public int hashCode() {
        return (idContact != null)
            ? (this.getClass().hashCode() + idContact.hashCode())
            : super.hashCode();
    }

    @Override
    public String toString() {
        return String.format("Morale[%d, %s]", idContact, contact.getEmail());
    }
	


}
